// Go into the /pages/cart.js
// import {parseCookies} fron 'nookies'
// import baseUrl from utils

// fetch the cart data from a new endpoint and
// pass it down to both, CartItemList and CartSummary

// So, before the export default Cart and below the return

Cart.getInitialProps = async (ctx) => {
  const { token } = parseCookies(ctx);
  if (!token) {
    return { products: [] };
  }
  const url = `${baseUrl}/api/cart`;
  const payload = { headers: { Authorization: token } };
  const response = await axios.get(url, payload);
  return { products: response.data };
};


2-Go into the api/cart.js


// Import the Cart model
// import mongoose from 'mongoose'
// import jwt from 'jsonwebtoken'
// import connectDb

connectDb();

export default async (req, res) => {
  if (!("authorization" in req.headers)) {
    return res.status(401).send("No authorization token");
  }
  try {
    const { userId } = jwt.verify(
      req.headers.authorization,
      process.env.JWT_SECRET
    );
    const cart = await Cart.findOne({ user: userId }).populate({
      path: "products.product",
      model: "Product",
    });
    res.status(200).json(cart.products);
  } catch (error) {
    console.error(error);
    res.status(403).send("Please login again");
  }
};

// accept the products as props in the Cart component




