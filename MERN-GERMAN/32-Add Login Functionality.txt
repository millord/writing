 // go into the api/login.js

// copy all the imports from the signup compent 
// into the login.js but isEmail and isLength

// in that file login.js execute

connectDb()

export default async (req, res) => {

}


// go inside the pages/login.js
// inside the handleSubmit function
// import baseUrl and axios
// below setError('')

const url = `${baseUrl}/api/login`
const payload = {...user}
await axios.post(url, payload)


2-Go into the api/login.js

// go into the api/login.js

// copy all the imports from the signup compent
// into the login.js but isEmail and isLength

// in that file login.js execute

connectDb();

export default async (req, res) => {
  const { email, password } = req.body;
  try {
    // 1) check to see if a user exists with the provide email
    const user = await User.findOne({ email }).select("+password");
    // 2) -- if not, return error
    if (!user) {
      return res.status(404).send("No user exists with that email");
    }
    // 3) check to see if the user's passwor matches the one in db
    const passwordMatch = await bcrypt.compare(password, user.password);
    // 4) -- if so, generatea token
    if (passwordMatch) {
      const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, {
        expiresIn: "7d",
      });
      // 5) send that token to the client
      res.status(200).json(token);
    } else {
      res.status(401).send("Passwords do not match");
    }
  } catch (error) {
    console.error(error);
    res.status(500).send("Error loggin in");
  }
};


--again 

// go inside the pages/login.js and modify it
// import handleLogin

const url = `${baseUrl}/api/login`;
const payload = { ...user };
const response = await axios.post(url, payload);
handleLogin(respons.data);


---TEST IT LOGIN IT--
you should get a token (see it in the console)
and redirect to account
