1-Go into the api/signup


// import connectDb  and execute it at the top

// import bcrypt and jwt

//import User from the models

// add the JWT_SECRET string in the .env file

// connectDb()

export default async (req, res) => {
  const { name, email, password } = req.body;
  try {
    // 1) check to see if the user already exists in the db
    const user = await User.findOne({ email });
    if (user) {
      return res.status(422).send(`User already exists with email ${emal}`);
    }
    // 2) -- if not, hash the password
    const hash = await bcrypt.hash(password, 10);
    // 3) create user
    const newUser = await new User({
      name,
      email,
      password: hash,
    }).save();
    console.log({ newUser });
    // 4) create the token for the new user
    const token = jwt.sign({ userId: newUser._id }, process.env.JWT_SECRET, {
      expiresIn: "7d",
    });
    // 5) send back token
    res.status(201).json(token);
  } catch (error) {
    console.error(error);
    res.status(500).send("Error signup user. Please try again later");
  }
};


