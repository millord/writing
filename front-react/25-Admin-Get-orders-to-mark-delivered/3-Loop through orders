Video: 125

-We need to add a heading so we can show the total
number of orders

-Go into the Orders.js component

-Change the name of the function noOrders to
shoOrdersLength and modify it.

removing what is in the return now and changing it to.

const showOrdersLength = () => {
  if (order.length > 0) {
    return (
      <h1 className="text-danger display-2">Total orders: {orders.length}</h1>
    );
  } else {
    return <h1 className="text-danger">No orders</h1>;
  }
};


--Go into the return and replace:

{noOrders(orders)} for {showOrdersLength()}


2-Loop through all of the orders and display them the right way.

-Remove the JSON.stringify in the return.
and below {showOrdersLength()} we can loop through all the orders.

-Import moment


{
  orders.map((o, oIndex) => {
    return (
      <div
        className="mt-5"
        key={oIndex}
        style={{ borderBottom: "5px solid indigo" }}
      >
        <h2 className="mb-5">
          <span className="bg-primary">Order ID: {o._id}</span>
        </h2>
        <ul className="list-group mb-2">
          <li className="list-group-item">{o.status}</li>
          <li className="list-group-item">
            {" "}
            Transaction ID: {o.transaction_id}
          </li>
          <li className="list-group-item"> Amount: ${o.amount}</li>
          <li className="list-group-item">Ordered by: {o.user.name}</li>
          <li className="list-group-item">
            Ordered on: {moment(o.createdAt).fromNow()}
          </li>
          <li className="list-group-item">Delivery address: {o.address}</li>
        </ul>
        <h3 className="mt-4 mb-4 font-italic">
          Total products in the order: {o.products.length}
        </h3>
      </div>
    );
  });
}


---TEST IT--



