React Context

1-create the app
2-Cleanup the files
3-Its going to be a movie app
4-Create the MovieList.js component (export default)
5-import useState in the MovieList component
add the state:
const [movie, setMovies] = useState([{
      name: "Harry Potter",
      price: "$70",
      id: 12456
    },
    {
      name: "Titanic",
      price: "$30",
      id: 1245655788
    },
    {
      name: "Fight Club",
      price: "$150",
      id: 124565757555
    }
])
6-return mapping each movie
7-import it in the App compont
8-Reding in the site npm start
9-Create the Movie component
-copy what you need to only render the movie (keep the data in the MovieList componenet)
10-use props to pass data from the MovieList component into the Movie component.
11-import the movie component into the movie list
12-add the price too into the Movie component and add the prop in the MovieList component
13-Create a Nav.js component and add your name and the amount of movies like:List of movies: 
14-Add the Nav component into the App component.
--- USING THE REACT CONTEXT API

1-create a component name MovieContext.js
-import React

2-Inside the MovieContext file create a component called:
MovieProvider (functional one) and move all the data from MovieList inside it.
3-Add useState and createContext and also use inside the component the data using:
const [movie, setMovie] = useState({
      name: "Harry Potter",
      price: "$70",
      id: 12456
    },
    {
      name: "Titanic",
      price: "$30",
      id: 1245655788
    },
    {
      name: "Fight Club",
      price: "$150",
      id: 124565757555
    }
])

4-Create the context using

export const MovieContext = createContext()
  
5-Wrapp the MovieProvider in all the components that we want to access the data with:

<MovieContext.Provider value={"hola"}>
{props.children}
<MovieContext.Provider>

6- import the MoviePrivider in the App component and wrap it in all the components you want to get the data.
7-access the value props in the Movie component render the value using:

-import the MovieContext, import the useContext
 hook.

-and inside the MovieList component before the render method:
const value = useContext(MovieContext)

and in the render add:

{value}

8-add the context in the Nav component to render the 
length of the movies: 

-import the MovieContext and the useContext hook.

9-Now pass as a value in an array [movies, setMovies] to the MovieList component feed all the components from there.

10-Add the length of movies in the Nav component.


-----CREATE THE ADD MOVIE COMPONENT.

11-create the AddMovie.js component

-add the useState hook
-return a form with two fields (name and price)
-and a button
12-create the state using usetState for the 
values name and prices
-create the methods for updateName, updataPrice and addMovie.

-render the AddMovie.js component into the App component (to make you sure it displays in the screen)

13-use the setMoives from the MovieContext and add it into the AddMoive component, import the useContext, and the MovieContext and add the hook.

update the addMoive method adding the setMoives(prevMovies => [...prevMovies], {name: name, price: price})

14-add an onSubmit to the form and add addMovies.